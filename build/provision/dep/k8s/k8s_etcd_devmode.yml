# Copyright (c) 2020 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: kube-eis
  labels:
    app: etcd
spec:
  ports:
  - name: etcd
    port: 8379
    protocol: TCP
  selector:
    app: etcd

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: etcd
  name: ia-etcd
  namespace: kube-eis
spec:
  restartPolicy: OnFailure
  containers:
  - name: ia-etcd
    image: ia_etcd:${EIS_VERSION}
    volumeMounts:
    - name: "etcd-data"
      mountPath: "$ETCD_DATA_DIR"
    env:
    - name: AppName
      value: "ia-etcd"
    - name: DEV_MODE
      value: "$DEV_MODE"
    - name: ETCD_CLIENT_PORT
      value: "$ETCD_CLIENT_PORT"
    - name: ETCD_PEER_PORT
      value: "$ETCD_PEER_PORT"
    - name: ETCD_NAME
      value: "$ETCD_NAME"
    - name: ETCD_INITIAL_CLUSTER_STATE
      value: "new"
    - name: ETCDCTL_API
      value: "3"
    - name: ETCD_DATA_DIR
      value: "$ETCD_DATA_DIR"
  - name: ia-etcd-provision
    image: ia_etcd_provision:${EIS_VERSION}
    volumeMounts:
    - name: config
      mountPath: /EIS/etcd/config
    - name: docker-compose
      mountPath: /EIS/etcd/docker-compose.yml
    env:
    - name: AppName
      value: "ia-etcd-provision"
    - name: DEV_MODE
      value: "$DEV_MODE"
    - name: ETCDCTL_API
      value: "3"
    - name: ETCD_ROOT_PASSWORD
      value: "eis123"
    - name: ETCD_HOST
      value: localhost
    - name: ETCD_CLIENT_PORT
      value: "$ETCD_CLIENT_PORT"
    - name: ETCD_PEER_PORT
      value: "$ETCD_PEER_PORT"
    - name: provision_mode
      value: "$PROVISION_MODE"
    - name: ETCD_PREFIX
      value: "$ETCD_PREFIX"
    command: ["/bin/sh"]
    args:
      - -c
      - >
        cd /EIS/etcd/
        && python3 etcd_provision.py docker-compose.yml
        && while true; do sleep 50000; done

  volumes:
  - name: "etcd-data"
    hostPath:
      path: ${EIS_INSTALL_PATH}/data/etcd/
  - name: config
    hostPath:
      path: ${EIS_LOCAL_PATH}/build/provision/config
  - name: docker-compose
    hostPath:
      path: ${EIS_LOCAL_PATH}/build/docker-compose.yml
