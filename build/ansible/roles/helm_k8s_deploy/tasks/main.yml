---
# Copyright (c) 2021 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

- debug:
    msg: "Deploying helmchart in HELM/k8s Leader Node"

- name: Cleaning directory {{ EII_DEPLOY_PATH }}/build if it exist in {{ inventory_hostname }}
  become: yes
  ansible.builtin.file:
    path: "{{ EII_DEPLOY_PATH }}/build"
    state: absent

- name: Cleaning directory {{ EII_INSTALL_PATH }}/data if it exists
  become: yes
  ansible.builtin.file:
    path: "{{ EII_INSTALL_PATH }}/data"
    state: absent

- name: Ensure group "{{ EII_USER_NAME }}" exists with correct gid "{{ EII_UID }}"
  become: yes
  ansible.builtin.group:
    name: "{{ EII_USER_NAME }}"
    gid: "{{ EII_UID }}"
    state: present

- name: Ensure user "{{ EII_USER_NAME }}" exists with correct uid "{{ EII_UID }}"
  become: yes
  ansible.builtin.user:
    name: "{{ EII_USER_NAME }}"
    uid: "{{ EII_UID }}"
    group: "{{ EII_USER_NAME }}"
    state: present

- name: Create EII Installation {{ EII_INSTALL_PATH }}/data/influxdata directory if it does not exists
  become: yes
  ansible.builtin.file:
    path: "{{ EII_INSTALL_PATH }}/data/influxdata"
    state: directory

- name: Create EII Installation {{ EII_INSTALL_PATH }}/sockets directory if it does not exists
  become: yes
  ansible.builtin.file:
    path: "{{ EII_INSTALL_PATH }}/sockets"
    state: directory

- name: Updating User & Group OWnership for {{ EII_INSTALL_PATH }} directory for {{ EII_USER_NAME }}
  become: yes
  ansible.builtin.file:
    path: "{{ EII_INSTALL_PATH }}"
    owner: "{{ EII_USER_NAME }}"
    group: "{{ EII_USER_NAME }}"

- name: Create directory {{ EII_DEPLOY_PATH }}/build/helm if it does not exist in {{ inventory_hostname }}
  become: yes
  ansible.builtin.file:
    path: "{{ EII_DEPLOY_PATH }}/build/"
    state: directory
    mode: '0755'

- name: Copy helm charts from control node to leader node
  become: yes
  ansible.builtin.copy:
    src: "{{ EII_SOURCE_PATH }}/build/helm-eii"
    dest: "{{ EII_DEPLOY_PATH }}/build/"
    follow: yes

- name: Copy eii_config.json from control node to leader node
  become: yes
  ansible.builtin.copy:
    src: "{{ EII_SOURCE_PATH }}/build/eii_config.json"
    dest: "{{ EII_DEPLOY_PATH }}/build/helm-eii/eii-provision"
    follow: yes

- name: Copy eii_config.json from control node to leader node
  become: yes
  ansible.builtin.copy:
    src: "{{ EII_SOURCE_PATH }}/build/eii_config.json"
    dest: "{{ EII_DEPLOY_PATH }}/build/helm-eii/eii-deploy"
    follow: yes

- name: Getting Existing eii-deploy status
  shell: "helm list -q | grep eii-deploy | wc -l"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/build/helm-eii/"
  register: helm_eii_deploy

- debug:
    msg: "{{ helm_eii_deploy.stdout }}"

- name: Stopping/Uninstalling existing helm eii-deploy chart
  shell: "helm uninstall eii-deploy"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/build/helm-eii/"
  register: helm_eii_deploy_uninstall_status
  when: helm_eii_deploy.stdout != "0"

- name: Getting Existing eii-provision status
  shell: "helm list -q | grep eii-provision | wc -l"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/build/helm-eii/"
  register: helm_eii_provision

- debug:
    msg: "{{ helm_eii_provision.stdout }}"

- name: Stopping/Uninstalling existing helm eii-provision chart
  shell: "helm uninstall eii-provision"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/build/helm-eii/"
  register: helm_eii_provision_uninstall_status
  when: helm_eii_provision.stdout != "0"

- name: "Provisioning EII Using Helm"
  shell: "helm install eii-provision eii-provision/"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/build/helm-eii/"
  register: command_out

- debug:
    msg: "{{ command_out.stdout }}"

- debug:
    msg: "Waiting for eii-provsion container to up"

- name: Wait for {{ wait_time_for_config_mgr }} seconds for Loading Provisioning Pod
  wait_for:
    timeout: "{{ wait_time_for_config_mgr }}"

- name: Wait for Provisioning is Done
  shell: "kubectl logs -l app=configmgragent"
  register: result
  until: result.stdout.find("Provisioning is Done") != -1 or result.stderr_lines[-1].find("Provisioning is Done") != -1
  retries: 5
  delay: 5

- name: Set Directory permission for Certificates as accesible to leader
  become: yes
  ansible.builtin.file:
    path: "{{ EII_DEPLOY_PATH }}/build/helm-eii/eii-deploy/Certificates/"
    state: directory
    recurse: yes
    mode: '0777'

- name: "Deploy EII Using Helm"
  shell: "helm install eii-deploy eii-deploy/"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/build/helm-eii"
  register: command_out

- debug:
    msg: "{{ command_out.stdout }}"
