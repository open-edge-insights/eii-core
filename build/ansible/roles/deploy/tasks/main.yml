---
# Copyright (c) 2021 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


- name: Copy eii_bundle.tar.gz from control node to all nodes
  become: yes
  ansible.builtin.copy:
    src: "{{ EII_SOURCE_PATH }}/build/deploy/{{ inventory_hostname }}.tar.gz"
    dest: "{{ EII_DEPLOY_PATH }}"
    follow: yes

- name: Extract eii_bundle.tar.gz to "{{ EII_DEPLOY_PATH }}"
  become: yes
  ansible.builtin.unarchive:
    src: "{{ EII_DEPLOY_PATH }}/{{ inventory_hostname }}.tar.gz"
    dest: "{{ EII_DEPLOY_PATH }}"
    remote_src: yes

- name: Change permission of Certificates to 750
  become: yes
  shell: "chmod -R 0750 Certificates/"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/{{ inventory_hostname }}/provision"
  when: DEV_MODE == false

- name: "Bring down all containers"
  shell: "docker-compose down"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/{{ inventory_hostname }}"
  register: command_out

# This task load the docker containers to the deployment nodes when multi_node and build flag set to true.
# If docker_registry is set, docker load task will not be executed
# if build is set to false and multi_node is set to true, then also this task will not be executed
- name: docker load
  become: yes
  shell: " python3 docker_load.py -dl"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/{{ inventory_hostname }}"
  register: command_out
  when: multi_node == true and docker_registry == "" and build == true

- debug:
    msg: "{{ command_out.stdout }}"
  when: multi_node == true and docker_registry == "" and build == true

- name: docker login
  shell: "docker login {{ docker_registry }} -u {{ docker_login_user }} -p {{ docker_login_passwd }}"
  register: command_out
  when: docker_registry != "" and docker_login_user != "" and docker_login_passwd != ""

- debug:
    msg: "Status of docker login, {{ command_out.stdout }}"
  when: docker_registry != "" and docker_login_user != "" and docker_login_passwd != ""

- name: docker login to docker hub
  shell: "docker login -u {{ docker_login_user }} -p {{ docker_login_passwd }}"
  register: command_out
  when: docker_registry == "" and docker_login_user != "" and docker_login_passwd != ""

- debug:
    msg: "Status of docker login, {{ command_out.stdout }}"
  when: docker_registry == "" and docker_login_user != "" and docker_login_passwd != ""

- name: "Executing docker-compose up for {{ usecase }} Usecase"
  shell: "docker-compose up -d"
  args:
    chdir: "{{ EII_DEPLOY_PATH }}/{{ inventory_hostname }}"
  register: command_out

- debug:
    msg: "Deployed {{ usecase }} usecase to {{inventory_hostname}}"
