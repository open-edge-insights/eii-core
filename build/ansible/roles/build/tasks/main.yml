---
# Copyright (c) 2021 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

- debug:
    msg: "EII build stage will take longer depending on the machine configuration"

- name: Loading env template & updating build/.env
  template:
    src: env.j2
    dest: "{{ eii_source_path }}/build/.env"

- name: Loading provisioning env template & updating build/provision/.env
  template:
    src: provision_env.j2
    dest: "{{ eii_source_path }}/build/provision/.env"

- name: "Generating docker-compose file & config files builder for the usecase {{ usecase }} using {{ usecase }}.yml file"
  shell: "python3 builder.py"
  args:
    chdir: "{{ eii_source_path }}/build"
  register: command_out
  when: usecase == 'all' 

- debug:
    msg: "Status of building containers {{ command_out.stdout }}"
  when: usecase == 'all'

- name: "Generating docker-compose file & config file using builder for the usecase {{ usecase }} using {{ usecase }}.yml file"
  shell: "python3 builder.py -f usecases/{{ usecase }}.yml"
  args:
    chdir: "{{ eii_source_path }}/build"
  register: command_out
  when: usecase != 'all'

- debug:
    msg: "Status of building containers {{ command_out.stdout }}"
  when: usecase != 'all'

- name: "Make sure docker service is running"
  become: yes
  service:
    name=docker
    state=started
    enabled=yes

- debug:
    msg: "Building containers based on the `builder` generated files & configs for {{ usecase }} usecase "

- name: "Building containers for {{ usecase }} usecase"
  shell: "docker-compose -f docker-compose-build.yml build"
  args:
    chdir: "{{ eii_source_path }}/build"
  register: command_out

- debug:
    msg: "Status of building containers {{ command_out.stdout }}"

