# env file for docker-compose

# ----------------------------------
# Docker compose configs
# ----------------------------------
COMPOSE_HTTP_TIMEOUT=200
COMPOSE_PROJECT_NAME=EdgeInsightsSoftware

# ----------------------------------
# EII configs
# ----------------------------------

# Docker security
EII_USER_NAME=eiiuser
EII_UID={{ EII_UID }}
# This is the path where EII package is installed
EII_INSTALL_PATH=/opt/intel/eii
# This is the path where Turtle Creek will copy installer bundle
TC_DISPATCHER_PATH=/var/cache/manageability/dispatcher-docker-compose/
# SOCKET_DIR path inside container used by containers like video ingestion and
# video analytics
SOCKET_DIR=/EII/sockets

# DEV_MODE if set `true` allows one to run EII in non-secure mode and provides additional UX/DX etc.,
DEV_MODE={{ DEV_MODE|lower }}
# PROFILING_MODE is set 'true' allows to generate profile/performance data
PROFILING_MODE=false

RTSP_CAMERA_IP=localhost
# All server certificates will be generated with below HOST_IP
# If HOST_IP is blank, HOST_IP will be automatically populated with
# current system's IP when builder.py is executed. This HOST_IP will be added to the generated certs
{% if hostvars['leader']['ansible_host'] == 'localhost' %}
HOST_IP={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
{% else %}
HOST_IP={{ hostvars['leader']['ansible_host'] }}
{% endif %}
# Add the IP address of thehost machine for accessing web clients (for Web Visualizer, Grafane etc) from other nodes. This is applicable
# only when HOST_IP is set to 127.0.0.1.
SSL_SAN_IP=
# Please provide docker registry details below for docker-compose push/pull
# Please provide full registry url with port trail by /
# e.q. localhost:5000/
{% if docker_registry is defined %}
DOCKER_REGISTRY={{ docker_registry }}
{% else %}
DOCKER_REGISTRY=
{% endif %}

{% if docker_login_user is defined %}
DOCKER_USERNAME={{ docker_login_user }}
{% else %}
DOCKER_USERNAME=
{% endif %}

{% if docker_login_passwd is defined %}
DOCKER_PASSWORD={{ docker_login_passwd }}
{% else %}
DOCKER_PASSWORD=
{% endif %}

# EII dependency image versions
UBUNTU_IMAGE_VERSION=20.04
OPENVINO_IMAGE=openvino/ubuntu20_data_runtime:2021.4.2
LIBREALSENSE_VERSION=2.44.0
GO_VERSION=1.15
# Only python 3.8
PYTHON_VERSION=3.8
GRAFANA_VERSION=8.1.5
INFLUXDB_VERSION=1.8.7
EII_VERSION={{ EII_VERSION }}
TELEGRAF_GO_VERSION=1.14.4
TELEGRAF_SOURCE_TAG=v1.14.5
KAPACITOR_VERSION=1.5.4
MINIO_VERSION=RELEASE.2020-12-12T08-39-07Z
INTELPYTHON_VERSION=2021.1.1

# EII ports
INFLUXDB_PORT=8086
KAPACITOR_PORT=9092
GRAFANA_PORT=3000

# Etcd settings
# If ETCD_HOST is blank, ETCD_HOST will be automatically populated with current system's IP
# when builder.py is executed
{% if hostvars['leader']['ansible_host'] == 'localhost' %}
ETCD_HOST={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}
{% else %}
ETCD_HOST={{ hostvars['leader']['ansible_host'] }}
{% endif %}

ETCD_NAME=leader

# ETCD prefix for the key
# Eg. ETCD_PREFIX=/csl/apps/EII
ETCD_PREFIX=
ETCD_VERSION=v3.4.0
ETCD_DATA_DIR=/EII/etcd/data/
ETCD_RESET=true
ETCD_CLIENT_PORT=2379
ETCD_PEER_PORT=2380
EII_HOME_DIR={{ EII_DEPLOY_PATH }}

# For proxy environment, please append IP addresses or Range IP addresses of each node of the cluster to no_proxy
# e.q. eii_no_proxy=localhost,127.0.0.1,10.223.109.130,10.223.109.170
eii_no_proxy=localhost,127.0.0.1,{{ no_proxy }}
http_proxy={{ http_proxy }}
https_proxy={{ https_proxy }}

# TLS ciphers for ETCD, INFLUXDB
TLS_CIPHERS=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
SSL_KEY_LENGTH=3072

# For time series use cases, setting this value and passing this as a environment variable to respective containers,
# lowers the end to end time of a metric.
GOMAXPROCS=16

HOST_TIME_ZONE={{ hostvars['control']['controlnodetimezone'] }}


# RestDataExport Settings for enabling/disabling POST call to external server. By default RestDataExport enabled in "GET" only.
HTTP_METHOD_FETCH_METADATA={{ HTTP_METHOD_FETCH_METADATA }}

## EII Service Secrets
{% if INFLUXDB_USERNAME is defined %}
INFLUXDB_USERNAME={{ INFLUXDB_USERNAME }}
{% else %}
INFLUXDB_USERNAME=
{% endif %}
{% if INFLUXDB_PASSWORD is defined %}
INFLUXDB_PASSWORD={{ INFLUXDB_PASSWORD }}
{% else %}
INFLUXDB_PASSWORD=
{% endif %}
{% if WEBVISUALIZER_USERNAME is defined and DEV_MODE == false %}
WEBVISUALIZER_USERNAME={{ WEBVISUALIZER_USERNAME }}
{% else %}
WEBVISUALIZER_USERNAME=
{% endif %}
{% if WEBVISUALIZER_PASSWORD is defined and DEV_MODE == false %}
WEBVISUALIZER_PASSWORD={{ WEBVISUALIZER_PASSWORD }}
{% else %}
WEBVISUALIZER_PASSWORD=
{% endif %}
{% if MINIO_ACCESS_KEY is defined and DEV_MODE == false %}
MINIO_ACCESS_KEY={{ MINIO_ACCESS_KEY }}
{% else %}
MINIO_ACCESS_KEY=
{% endif %}
{% if MINIO_SECRET_KEY is defined and DEV_MODE == false %}
MINIO_SECRET_KEY={{ MINIO_SECRET_KEY }}
{% else %}
MINIO_SECRET_KEY=
{% endif %}
{% if ETCDROOT_PASSWORD  is defined %}
ETCDROOT_PASSWORD={{ ETCDROOT_PASSWORD  }}
{% else %}
ETCDROOT_PASSWORD=
{% endif %}
