// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: da.proto

#include "da.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace DataAgent {
class BlobReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlobReq>
      _instance;
} _BlobReq_default_instance_;
class ChunkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Chunk>
      _instance;
} _Chunk_default_instance_;
class ConfigIntReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigIntReq>
      _instance;
} _ConfigIntReq_default_instance_;
class ConfigIntRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigIntResp>
      _instance;
} _ConfigIntResp_default_instance_;
class QueryReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryReq>
      _instance;
} _QueryReq_default_instance_;
class QueryRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResp>
      _instance;
} _QueryResp_default_instance_;
class ConfigReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigReq>
      _instance;
} _ConfigReq_default_instance_;
class ConfigRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigResp>
      _instance;
} _ConfigResp_default_instance_;
}  // namespace DataAgent
namespace protobuf_da_2eproto {
void InitDefaultsBlobReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_BlobReq_default_instance_;
    new (ptr) ::DataAgent::BlobReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::BlobReq::InitAsDefaultInstance();
}

void InitDefaultsBlobReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlobReqImpl);
}

void InitDefaultsChunkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_Chunk_default_instance_;
    new (ptr) ::DataAgent::Chunk();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::Chunk::InitAsDefaultInstance();
}

void InitDefaultsChunk() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChunkImpl);
}

void InitDefaultsConfigIntReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_ConfigIntReq_default_instance_;
    new (ptr) ::DataAgent::ConfigIntReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::ConfigIntReq::InitAsDefaultInstance();
}

void InitDefaultsConfigIntReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConfigIntReqImpl);
}

void InitDefaultsConfigIntRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_ConfigIntResp_default_instance_;
    new (ptr) ::DataAgent::ConfigIntResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::ConfigIntResp::InitAsDefaultInstance();
}

void InitDefaultsConfigIntResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConfigIntRespImpl);
}

void InitDefaultsQueryReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_QueryReq_default_instance_;
    new (ptr) ::DataAgent::QueryReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::QueryReq::InitAsDefaultInstance();
}

void InitDefaultsQueryReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryReqImpl);
}

void InitDefaultsQueryRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_QueryResp_default_instance_;
    new (ptr) ::DataAgent::QueryResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::QueryResp::InitAsDefaultInstance();
}

void InitDefaultsQueryResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQueryRespImpl);
}

void InitDefaultsConfigReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_ConfigReq_default_instance_;
    new (ptr) ::DataAgent::ConfigReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::ConfigReq::InitAsDefaultInstance();
}

void InitDefaultsConfigReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConfigReqImpl);
}

void InitDefaultsConfigRespImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DataAgent::_ConfigResp_default_instance_;
    new (ptr) ::DataAgent::ConfigResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DataAgent::ConfigResp::InitAsDefaultInstance();
}

void InitDefaultsConfigResp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConfigRespImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::BlobReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::BlobReq, imghandle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::Chunk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::Chunk, chunk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::ConfigIntReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::ConfigIntReq, cfgtype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::ConfigIntResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::ConfigIntResp, jsonmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::QueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::QueryResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::ConfigReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DataAgent::ConfigResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DataAgent::BlobReq)},
  { 6, -1, sizeof(::DataAgent::Chunk)},
  { 12, -1, sizeof(::DataAgent::ConfigIntReq)},
  { 18, -1, sizeof(::DataAgent::ConfigIntResp)},
  { 24, -1, sizeof(::DataAgent::QueryReq)},
  { 29, -1, sizeof(::DataAgent::QueryResp)},
  { 34, -1, sizeof(::DataAgent::ConfigReq)},
  { 39, -1, sizeof(::DataAgent::ConfigResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_BlobReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_Chunk_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_ConfigIntReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_ConfigIntResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_QueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_QueryResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_ConfigReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DataAgent::_ConfigResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "da.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010da.proto\022\tDataAgent\"\034\n\007BlobReq\022\021\n\timgH"
      "andle\030\001 \001(\t\"\026\n\005Chunk\022\r\n\005chunk\030\001 \001(\014\"\037\n\014C"
      "onfigIntReq\022\017\n\007cfgType\030\001 \001(\t\" \n\rConfigIn"
      "tResp\022\017\n\007jsonMsg\030\001 \001(\t\"\n\n\010QueryReq\"\013\n\tQu"
      "eryResp\"\013\n\tConfigReq\"\014\n\nConfigResp2\355\001\n\002d"
      "a\022C\n\014GetConfigInt\022\027.DataAgent.ConfigIntR"
      "eq\032\030.DataAgent.ConfigIntResp\"\000\0227\n\006Config"
      "\022\024.DataAgent.ConfigReq\032\025.DataAgent.Confi"
      "gResp\"\000\0224\n\005Query\022\023.DataAgent.QueryReq\032\024."
      "DataAgent.QueryResp\"\000\0223\n\007GetBlob\022\022.DataA"
      "gent.BlobReq\032\020.DataAgent.Chunk\"\0000\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 442);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "da.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_da_2eproto
namespace DataAgent {

// ===================================================================

void BlobReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlobReq::kImgHandleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlobReq::BlobReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsBlobReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.BlobReq)
}
BlobReq::BlobReq(const BlobReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imghandle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imghandle().size() > 0) {
    imghandle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imghandle_);
  }
  // @@protoc_insertion_point(copy_constructor:DataAgent.BlobReq)
}

void BlobReq::SharedCtor() {
  imghandle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlobReq::~BlobReq() {
  // @@protoc_insertion_point(destructor:DataAgent.BlobReq)
  SharedDtor();
}

void BlobReq::SharedDtor() {
  imghandle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlobReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlobReq::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlobReq& BlobReq::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsBlobReq();
  return *internal_default_instance();
}

BlobReq* BlobReq::New(::google::protobuf::Arena* arena) const {
  BlobReq* n = new BlobReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlobReq::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.BlobReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imghandle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BlobReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.BlobReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string imgHandle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imghandle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imghandle().data(), static_cast<int>(this->imghandle().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataAgent.BlobReq.imgHandle"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.BlobReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.BlobReq)
  return false;
#undef DO_
}

void BlobReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.BlobReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imgHandle = 1;
  if (this->imghandle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imghandle().data(), static_cast<int>(this->imghandle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataAgent.BlobReq.imgHandle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->imghandle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.BlobReq)
}

::google::protobuf::uint8* BlobReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.BlobReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imgHandle = 1;
  if (this->imghandle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imghandle().data(), static_cast<int>(this->imghandle().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataAgent.BlobReq.imgHandle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->imghandle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.BlobReq)
  return target;
}

size_t BlobReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.BlobReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string imgHandle = 1;
  if (this->imghandle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imghandle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlobReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.BlobReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BlobReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlobReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.BlobReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.BlobReq)
    MergeFrom(*source);
  }
}

void BlobReq::MergeFrom(const BlobReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.BlobReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imghandle().size() > 0) {

    imghandle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imghandle_);
  }
}

void BlobReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.BlobReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlobReq::CopyFrom(const BlobReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.BlobReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlobReq::IsInitialized() const {
  return true;
}

void BlobReq::Swap(BlobReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlobReq::InternalSwap(BlobReq* other) {
  using std::swap;
  imghandle_.Swap(&other->imghandle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlobReq::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Chunk::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Chunk::kChunkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Chunk::Chunk()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsChunk();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.Chunk)
}
Chunk::Chunk(const Chunk& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chunk().size() > 0) {
    chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunk_);
  }
  // @@protoc_insertion_point(copy_constructor:DataAgent.Chunk)
}

void Chunk::SharedCtor() {
  chunk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Chunk::~Chunk() {
  // @@protoc_insertion_point(destructor:DataAgent.Chunk)
  SharedDtor();
}

void Chunk::SharedDtor() {
  chunk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Chunk::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Chunk::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Chunk& Chunk::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsChunk();
  return *internal_default_instance();
}

Chunk* Chunk::New(::google::protobuf::Arena* arena) const {
  Chunk* n = new Chunk;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Chunk::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.Chunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chunk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Chunk::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.Chunk)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes chunk = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_chunk()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.Chunk)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.Chunk)
  return false;
#undef DO_
}

void Chunk::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.Chunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->chunk(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.Chunk)
}

::google::protobuf::uint8* Chunk::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.Chunk)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->chunk(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.Chunk)
  return target;
}

size_t Chunk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.Chunk)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes chunk = 1;
  if (this->chunk().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->chunk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Chunk::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.Chunk)
  GOOGLE_DCHECK_NE(&from, this);
  const Chunk* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Chunk>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.Chunk)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.Chunk)
    MergeFrom(*source);
  }
}

void Chunk::MergeFrom(const Chunk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.Chunk)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chunk().size() > 0) {

    chunk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chunk_);
  }
}

void Chunk::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.Chunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Chunk::CopyFrom(const Chunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.Chunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Chunk::IsInitialized() const {
  return true;
}

void Chunk::Swap(Chunk* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Chunk::InternalSwap(Chunk* other) {
  using std::swap;
  chunk_.Swap(&other->chunk_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Chunk::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigIntReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigIntReq::kCfgTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigIntReq::ConfigIntReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsConfigIntReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.ConfigIntReq)
}
ConfigIntReq::ConfigIntReq(const ConfigIntReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cfgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cfgtype().size() > 0) {
    cfgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cfgtype_);
  }
  // @@protoc_insertion_point(copy_constructor:DataAgent.ConfigIntReq)
}

void ConfigIntReq::SharedCtor() {
  cfgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigIntReq::~ConfigIntReq() {
  // @@protoc_insertion_point(destructor:DataAgent.ConfigIntReq)
  SharedDtor();
}

void ConfigIntReq::SharedDtor() {
  cfgtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigIntReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigIntReq::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigIntReq& ConfigIntReq::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsConfigIntReq();
  return *internal_default_instance();
}

ConfigIntReq* ConfigIntReq::New(::google::protobuf::Arena* arena) const {
  ConfigIntReq* n = new ConfigIntReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigIntReq::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.ConfigIntReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cfgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConfigIntReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.ConfigIntReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cfgType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cfgtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cfgtype().data(), static_cast<int>(this->cfgtype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataAgent.ConfigIntReq.cfgType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.ConfigIntReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.ConfigIntReq)
  return false;
#undef DO_
}

void ConfigIntReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.ConfigIntReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cfgType = 1;
  if (this->cfgtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfgtype().data(), static_cast<int>(this->cfgtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataAgent.ConfigIntReq.cfgType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cfgtype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.ConfigIntReq)
}

::google::protobuf::uint8* ConfigIntReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.ConfigIntReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cfgType = 1;
  if (this->cfgtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfgtype().data(), static_cast<int>(this->cfgtype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataAgent.ConfigIntReq.cfgType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cfgtype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.ConfigIntReq)
  return target;
}

size_t ConfigIntReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.ConfigIntReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cfgType = 1;
  if (this->cfgtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cfgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigIntReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.ConfigIntReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigIntReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigIntReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.ConfigIntReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.ConfigIntReq)
    MergeFrom(*source);
  }
}

void ConfigIntReq::MergeFrom(const ConfigIntReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.ConfigIntReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cfgtype().size() > 0) {

    cfgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cfgtype_);
  }
}

void ConfigIntReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.ConfigIntReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigIntReq::CopyFrom(const ConfigIntReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.ConfigIntReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigIntReq::IsInitialized() const {
  return true;
}

void ConfigIntReq::Swap(ConfigIntReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigIntReq::InternalSwap(ConfigIntReq* other) {
  using std::swap;
  cfgtype_.Swap(&other->cfgtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigIntReq::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigIntResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigIntResp::kJsonMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigIntResp::ConfigIntResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsConfigIntResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.ConfigIntResp)
}
ConfigIntResp::ConfigIntResp(const ConfigIntResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jsonmsg().size() > 0) {
    jsonmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonmsg_);
  }
  // @@protoc_insertion_point(copy_constructor:DataAgent.ConfigIntResp)
}

void ConfigIntResp::SharedCtor() {
  jsonmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigIntResp::~ConfigIntResp() {
  // @@protoc_insertion_point(destructor:DataAgent.ConfigIntResp)
  SharedDtor();
}

void ConfigIntResp::SharedDtor() {
  jsonmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigIntResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigIntResp::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigIntResp& ConfigIntResp::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsConfigIntResp();
  return *internal_default_instance();
}

ConfigIntResp* ConfigIntResp::New(::google::protobuf::Arena* arena) const {
  ConfigIntResp* n = new ConfigIntResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigIntResp::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.ConfigIntResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jsonmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConfigIntResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.ConfigIntResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string jsonMsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jsonmsg().data(), static_cast<int>(this->jsonmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataAgent.ConfigIntResp.jsonMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.ConfigIntResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.ConfigIntResp)
  return false;
#undef DO_
}

void ConfigIntResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.ConfigIntResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonMsg = 1;
  if (this->jsonmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonmsg().data(), static_cast<int>(this->jsonmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataAgent.ConfigIntResp.jsonMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jsonmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.ConfigIntResp)
}

::google::protobuf::uint8* ConfigIntResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.ConfigIntResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonMsg = 1;
  if (this->jsonmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonmsg().data(), static_cast<int>(this->jsonmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataAgent.ConfigIntResp.jsonMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jsonmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.ConfigIntResp)
  return target;
}

size_t ConfigIntResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.ConfigIntResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string jsonMsg = 1;
  if (this->jsonmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jsonmsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigIntResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.ConfigIntResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigIntResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigIntResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.ConfigIntResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.ConfigIntResp)
    MergeFrom(*source);
  }
}

void ConfigIntResp::MergeFrom(const ConfigIntResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.ConfigIntResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jsonmsg().size() > 0) {

    jsonmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonmsg_);
  }
}

void ConfigIntResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.ConfigIntResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigIntResp::CopyFrom(const ConfigIntResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.ConfigIntResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigIntResp::IsInitialized() const {
  return true;
}

void ConfigIntResp::Swap(ConfigIntResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigIntResp::InternalSwap(ConfigIntResp* other) {
  using std::swap;
  jsonmsg_.Swap(&other->jsonmsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigIntResp::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryReq::QueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsQueryReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.QueryReq)
}
QueryReq::QueryReq(const QueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DataAgent.QueryReq)
}

void QueryReq::SharedCtor() {
  _cached_size_ = 0;
}

QueryReq::~QueryReq() {
  // @@protoc_insertion_point(destructor:DataAgent.QueryReq)
  SharedDtor();
}

void QueryReq::SharedDtor() {
}

void QueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryReq::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryReq& QueryReq::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsQueryReq();
  return *internal_default_instance();
}

QueryReq* QueryReq::New(::google::protobuf::Arena* arena) const {
  QueryReq* n = new QueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.QueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool QueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.QueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.QueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.QueryReq)
  return false;
#undef DO_
}

void QueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.QueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.QueryReq)
}

::google::protobuf::uint8* QueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.QueryReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.QueryReq)
  return target;
}

size_t QueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.QueryReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.QueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.QueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.QueryReq)
    MergeFrom(*source);
  }
}

void QueryReq::MergeFrom(const QueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.QueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void QueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.QueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryReq::CopyFrom(const QueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.QueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryReq::IsInitialized() const {
  return true;
}

void QueryReq::Swap(QueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryReq::InternalSwap(QueryReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryReq::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResp::QueryResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsQueryResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.QueryResp)
}
QueryResp::QueryResp(const QueryResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DataAgent.QueryResp)
}

void QueryResp::SharedCtor() {
  _cached_size_ = 0;
}

QueryResp::~QueryResp() {
  // @@protoc_insertion_point(destructor:DataAgent.QueryResp)
  SharedDtor();
}

void QueryResp::SharedDtor() {
}

void QueryResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryResp::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResp& QueryResp::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsQueryResp();
  return *internal_default_instance();
}

QueryResp* QueryResp::New(::google::protobuf::Arena* arena) const {
  QueryResp* n = new QueryResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryResp::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.QueryResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool QueryResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.QueryResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.QueryResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.QueryResp)
  return false;
#undef DO_
}

void QueryResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.QueryResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.QueryResp)
}

::google::protobuf::uint8* QueryResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.QueryResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.QueryResp)
  return target;
}

size_t QueryResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.QueryResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.QueryResp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.QueryResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.QueryResp)
    MergeFrom(*source);
  }
}

void QueryResp::MergeFrom(const QueryResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.QueryResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void QueryResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.QueryResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResp::CopyFrom(const QueryResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.QueryResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResp::IsInitialized() const {
  return true;
}

void QueryResp::Swap(QueryResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResp::InternalSwap(QueryResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryResp::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigReq::ConfigReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsConfigReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.ConfigReq)
}
ConfigReq::ConfigReq(const ConfigReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DataAgent.ConfigReq)
}

void ConfigReq::SharedCtor() {
  _cached_size_ = 0;
}

ConfigReq::~ConfigReq() {
  // @@protoc_insertion_point(destructor:DataAgent.ConfigReq)
  SharedDtor();
}

void ConfigReq::SharedDtor() {
}

void ConfigReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigReq::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigReq& ConfigReq::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsConfigReq();
  return *internal_default_instance();
}

ConfigReq* ConfigReq::New(::google::protobuf::Arena* arena) const {
  ConfigReq* n = new ConfigReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigReq::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.ConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ConfigReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.ConfigReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.ConfigReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.ConfigReq)
  return false;
#undef DO_
}

void ConfigReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.ConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.ConfigReq)
}

::google::protobuf::uint8* ConfigReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.ConfigReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.ConfigReq)
  return target;
}

size_t ConfigReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.ConfigReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.ConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.ConfigReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.ConfigReq)
    MergeFrom(*source);
  }
}

void ConfigReq::MergeFrom(const ConfigReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.ConfigReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConfigReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.ConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigReq::CopyFrom(const ConfigReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.ConfigReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigReq::IsInitialized() const {
  return true;
}

void ConfigReq::Swap(ConfigReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigReq::InternalSwap(ConfigReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigReq::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigResp::ConfigResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_da_2eproto::InitDefaultsConfigResp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataAgent.ConfigResp)
}
ConfigResp::ConfigResp(const ConfigResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DataAgent.ConfigResp)
}

void ConfigResp::SharedCtor() {
  _cached_size_ = 0;
}

ConfigResp::~ConfigResp() {
  // @@protoc_insertion_point(destructor:DataAgent.ConfigResp)
  SharedDtor();
}

void ConfigResp::SharedDtor() {
}

void ConfigResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigResp::descriptor() {
  ::protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigResp& ConfigResp::default_instance() {
  ::protobuf_da_2eproto::InitDefaultsConfigResp();
  return *internal_default_instance();
}

ConfigResp* ConfigResp::New(::google::protobuf::Arena* arena) const {
  ConfigResp* n = new ConfigResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigResp::Clear() {
// @@protoc_insertion_point(message_clear_start:DataAgent.ConfigResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ConfigResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataAgent.ConfigResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:DataAgent.ConfigResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataAgent.ConfigResp)
  return false;
#undef DO_
}

void ConfigResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataAgent.ConfigResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DataAgent.ConfigResp)
}

::google::protobuf::uint8* ConfigResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DataAgent.ConfigResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DataAgent.ConfigResp)
  return target;
}

size_t ConfigResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DataAgent.ConfigResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataAgent.ConfigResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataAgent.ConfigResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataAgent.ConfigResp)
    MergeFrom(*source);
  }
}

void ConfigResp::MergeFrom(const ConfigResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataAgent.ConfigResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ConfigResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataAgent.ConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigResp::CopyFrom(const ConfigResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataAgent.ConfigResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigResp::IsInitialized() const {
  return true;
}

void ConfigResp::Swap(ConfigResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigResp::InternalSwap(ConfigResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigResp::GetMetadata() const {
  protobuf_da_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_da_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace DataAgent

// @@protoc_insertion_point(global_scope)
