# Copyright (c) 2020 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ARG EII_VERSION
ARG DOCKER_REGISTRY
FROM ${DOCKER_REGISTRY}ia_eiibase:$EII_VERSION

ENV EII_VERSION ${EII_VERSION}
ENV PATH ${PATH}:${GOPATH}/bin
ARG GLOG_GO_PATH=${GOPATH}/src/github.com/golang/glog
ARG GLOG_VER=23def4e6c14b4da8ac2ed8007337bc5eb5007998
RUN mkdir -p ${GLOG_GO_PATH} && \
    git clone https://github.com/golang/glog ${GLOG_GO_PATH} && \
    cd ${GLOG_GO_PATH} && \
    git checkout -b ${GLOG_VER} ${GLOG_VER}

# This is a dependency for gojsonschema and is not used directly by source code
ARG GO_JSON_REFERENCE=${GOPATH}/src/github.com/xeipuuv/gojsonreference
RUN mkdir -p ${GO_JSON_REFERENCE} && \
    git clone https://github.com/xeipuuv/gojsonreference ${GO_JSON_REFERENCE} && \
    cd ${GO_JSON_REFERENCE} && \
    git checkout -b known_version bd5ef7bd5415a7ac448318e64f11a24cd21e594b

# This is a dependency for gojsonschema and is not used directly by source code
ARG GO_JSON_POINTER=${GOPATH}/src/github.com/xeipuuv/gojsonpointer
RUN mkdir -p ${GO_JSON_POINTER} && \
    git clone https://github.com/xeipuuv/gojsonpointer ${GO_JSON_POINTER} && \
    cd ${GO_JSON_POINTER} && \
    git checkout -b known_version 4e3ac2762d5f479393488629ee9370b50873b3a6

# Installing Go JSON schema validator
ARG GO_JSON_SCHEMA=${GOPATH}/src/github.com/xeipuuv/gojsonschema
RUN mkdir -p ${GO_JSON_SCHEMA} && \
    git clone https://github.com/xeipuuv/gojsonschema ${GO_JSON_SCHEMA} && \
    cd ${GO_JSON_SCHEMA} && \
    git checkout -b known_version 82fcdeb203eb6ab2a67d0a623d9c19e5e5a64927

WORKDIR /eii/common
ARG RUN_TESTS
ARG CMAKE_BUILD_TYPE
ARG CMAKE_INSTALL_PREFIX
ENV CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:${CMAKE_INSTALL_PREFIX}/lib

# Installing EIIMessageBus dependencies
COPY libs/EIIMessageBus/install.sh libs/EIIMessageBus/install.sh
COPY libs/EIIMessageBus/python/requirements.txt libs/EIIMessageBus/python/requirements.txt
RUN cd libs/EIIMessageBus && \
    ./install.sh --cython

# Installing ConfigMgr dependencies
COPY libs/ConfigMgr/install.sh libs/ConfigMgr/install.sh
RUN ./libs/ConfigMgr/install.sh

COPY util/requirements.txt util/requirements.txt
RUN pip3 install --user -r util/requirements.txt

COPY cmake cmake
COPY libs/IntelSafeString libs/IntelSafeString/
COPY libs/EIIMsgEnv libs/EIIMsgEnv
COPY util/ util/

COPY libs/DynLibLoad/ libs/DynLibLoad

COPY libs/EIIMessageBus libs/EIIMessageBus
COPY libs/ConfigMgr libs/ConfigMgr

# Install fast base64 library
ARG BASE64_REPO=https://github.com/aklomp/base64/archive/refs/tags/v0.4.0.tar.gz

RUN wget -O - ${BASE64_REPO} | tar xz && \
    cd base64-0.4.0 && \
    make && \
    cp -a include/libbase64.h /eii/common/util/c/include/eii/utils/. && \
    cp -a lib/libbase64.o /eii/common/util/c/include/eii/utils/. && \
    cd ../ && \
    rm -rf base64-0.4.0

COPY eii_libs_installer.sh .
RUN ./eii_libs_installer.sh

# Re-copying everything here to not miss any of the subfolders
COPY libs libs
COPY util util
