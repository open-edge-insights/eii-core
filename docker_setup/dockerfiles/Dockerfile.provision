# Dockerfile for Provisioning
ARG IEI_VERSION
FROM ia_gobase:$IEI_VERSION
LABEL description="DataAgent image"

WORKDIR ${GO_WORK_DIR}
RUN mkdir -p ${GO_WORK_DIR}/log

# Installing all golang dependencies
# TODO: Use dep tool itself in future once the "source" value
# is obeyed and just "name" value is not used for deducing the
# repo (https://github.com/golang/dep/pull/1857/commits)

ENV GLOG_GO_PATH ${GOPATH}/src/github.com/golang/glog
RUN mkdir -p ${GLOG_GO_PATH} && \
    git clone https://github.com/golang/glog ${GLOG_GO_PATH} && \
    cd ${GLOG_GO_PATH} && \
    git checkout -b known_version 23def4e6c14b4da8ac2ed8007337bc5eb5007998

ENV VAULT_GO_PATH ${GOPATH}/src/github.com/hashicorp/vault
RUN mkdir -p ${VAULT_GO_PATH} && \
    git clone https://github.com/hashicorp/vault ${VAULT_GO_PATH} && \
    cd  ${VAULT_GO_PATH} && \
    git checkout -b v1.0.0-beta2 tags/v1.0.0-beta2 && \
    go install

ENV PACKAGES="\
    musl \
    musl-dev \
    iproute2 \
    gcc \
    m4 \
    libtool \
    automake \
    libressl-dev \
    uthash-dev \
    autoconf \
    npth-dev \
    "

RUN apk add --no-cache $PACKAGES

RUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \
  autoconf-archive

RUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/main \
  libgcrypt-dev \
  curl-dev


ENV TPM_PATH ./TPM_SRC
RUN mkdir -p ${TPM_PATH}/tpm2_tss && \
    git clone https://github.com/tpm2-software/tpm2-tss.git ${TPM_PATH}/tpm2_tss && \
    cd ${TPM_PATH}/tpm2_tss && git checkout -b 2.1.0 tags/2.1.0

RUN cd ${TPM_PATH}/tpm2_tss/ && ./bootstrap &&  ./configure && make -j8 && make install

# build TPM-tool
RUN mkdir -p ${TPM_PATH}/tpm2_tools && \
    git clone https://github.com/tpm2-software/tpm2-tools.git ${TPM_PATH}/tpm2_tools && \
    cd ${TPM_PATH}/tpm2_tools && git checkout -b sma-pv 9f765f1959f2a4ee9683165071d05f9878d78443

RUN cd ${TPM_PATH}/tpm2_tools/ && ./bootstrap &&  ./configure && make -j8 && make install

RUN mkdir -p ./vault/file
ADD DataAgent/provision/provision_iei.go ./
ADD DataAgent/provision/provision_iei.sh ./
ADD docker_setup/config/provision_config.json ./config_file.json
ADD docker_setup/config/vault_config.hcl ./vault/config/vault_config.hcl
ADD Util ./Util

RUN go build -o /IEI/go/bin/provision_iei ./provision_iei.go
ENTRYPOINT ["./provision_iei.sh"]
HEALTHCHECK NONE
