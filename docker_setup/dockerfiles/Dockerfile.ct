# Client tests dockerfile
ARG IEI_VERSION
FROM ia_gobase:${IEI_VERSION}
LABEL description="Client tests container image"

RUN mkdir -p ${GO_WORK_DIR}/log && \
    apt-get update

ENV GO_WORK_DIR /IEI/go/src/IEdgeInsights
ENV PATH ${PATH}:/usr/local/go/bin:/IEI/go/bin
WORKDIR ${GO_WORK_DIR}
ENV GOPATH /IEI/go
RUN mkdir -p ${GO_WORK_DIR}/log

RUN apt-get update
# Installing build tools
RUN apt-get install -y cmake g++

# Installing all golang dependencies
# TODO: Use dep tool itself in future once the "source" value
# is obeyed and just "name" value is not used for deducing the
# repo (https://github.com/golang/dep/pull/1857/commits)
RUN go get -v github.com/BurntSushi/toml && \
    cd ${GOPATH}/src/github.com/BurntSushi/toml && \
    git checkout -b v0.3.0 tags/v0.3.0

WORKDIR /IEI/go/src/IEdgeInsights

# Installing grpc for cpp
RUN echo "Installing required packages..." && \
    apt-get update && \
    apt-get -y install build-essential autoconf libtool pkg-config && \
    apt-get -y install libgflags-dev libgtest-dev && \
    apt-get -y install clang libc++-dev && \
    apt-get -y install curl && \
    echo "Building grpc from source..." && \
    git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc && \
    cd grpc && \
    git checkout 109c570727c3089fef655edcdd0dd02cc5958010 && \
    git submodule update --init && \
    make install && \
    echo "Installing protoc..." && \
    cd ../grpc/third_party/protobuf && \
    make install && \
    echo "***Installation complete***"

WORKDIR /IEI/go/src/IEdgeInsights

# Installing python 2, pip2, python 3.6 and pip3.6
RUN apt-get update && \
    apt-get install -y software-properties-common pkg-config python python-pip && \
    add-apt-repository ppa:deadsnakes/ppa && \
    apt-get update && \
    apt-get install -y cmake g++ build-essential python3.6 python3.6-dev wget iputils-ping && \
    wget https://bootstrap.pypa.io/get-pip.py && \
    python3.6 get-pip.py && \
    apt-get install -y libsm6 libxext6 libfontconfig1 libxrender1

RUN pip3.6 install cryptography==2.4.2 && \
    pip3.6 install grpcio==1.12.1 && \
    pip3.6 install protobuf==3.6.0 && \
    pip3.6 install influxdb==5.0.0 && \
    pip3.6 install grpcio-tools

ARG REDIS_VERSION
RUN wget http://download.redis.io/releases/redis-${REDIS_VERSION}.tar.gz
RUN tar xzf redis-${REDIS_VERSION}.tar.gz
RUN cd /IEI/go/src/IEdgeInsights/redis-${REDIS_VERSION} && \
    make && \
    cp /IEI/go/src/IEdgeInsights/redis-${REDIS_VERSION}/src/redis-server /usr/local/bin && \
    cp /IEI/go/src/IEdgeInsights/redis-${REDIS_VERSION}/src/redis-cli /usr/local/bin

ARG MINIO_VERSION
RUN wget https://dl.minio.io/server/minio/release/linux-amd64/archive/minio.${MINIO_VERSION}
RUN mv minio.${MINIO_VERSION} minio
RUN chmod +x minio

# tls, crypto library needs to open62541
RUN apt-get install -y libmbedtls-dev

ADD DataBusAbstraction/ DataBusAbstraction/
ENV TERM xterm

# These flags are needed for security for compiling and linking with open62541
ENV CGO_CFLAGS "$CGO_FLAGS -O2 -D_FORTIFY_SOURCE=2 -Werror=format-security -fstack-protector-strong -fPIC"
ENV CGO_LDFLAGS "$CGO_LDFLAGS -z noexecstack -z relro -z now"

# Build the opent62541W.so file
RUN cd DataBusAbstraction/py && \
    pip3.6 install -r databus_requirements.txt && \
    cd test && \
    make build

ENV PYTHONPATH .:/IEI/go/src/IEdgeInsights/DataAgent/da_grpc/protobuff/py/pb_internal/:/IEI/go/src/IEdgeInsights/DataAgent/da_grpc/protobuff:/IEI/go/src/IEdgeInsights/DataBusAbstraction/py/:/IEI/go/src/IEdgeInsights/:/IEI/go/src/IEdgeInsights/DataAgent/da_grpc/protobuff/py/

ADD DataAgent/da_grpc/client ./DataAgent/da_grpc/client
ADD DataAgent/da_grpc/protobuff ./DataAgent/da_grpc/protobuff
ADD DataAgent/da_grpc/test ./DataAgent/da_grpc/test
ADD DataAgent/__init__.py ./DataAgent/__init__.py
ADD DataAgent/da_grpc/__init__.py ./DataAgent/da_grpc/__init__.py
ADD ImageStore/client ./ImageStore/client
ADD ImageStore/protobuff ./ImageStore/protobuff
ADD ImageStore/test ./ImageStore/test
ADD Util ./Util

ENTRYPOINT ["/bin/bash"]
HEALTHCHECK NONE

