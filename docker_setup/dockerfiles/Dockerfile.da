# Dockerfile for DataAgent
ARG ETA_VERSION
FROM ia/gobase:${ETA_VERSION}
LABEL description="DataAgent image"

ENV GOPATH /root/go

RUN mkdir -p ${GO_WORK_DIR}/log

# Installing build tools
RUN apt-get install -y cmake g++ build-essential

# Installing all golang dependencies
# TODO: Use dep tool itself in future once the "source" value
# is obeyed and just "name" value is not used for deducing the
# repo (https://github.com/golang/dep/pull/1857/commits)
RUN go get -v github.com/BurntSushi/toml && \
    cd ${GOPATH}/src/github.com/BurntSushi/toml && \
    git checkout -b v0.3.0 tags/v0.3.0

RUN go get -v github.com/golang/glog && \
    cd ${GOPATH}/src/github.com/golang/glog && \
    git checkout -b known_version 23def4e6c14b4da8ac2ed8007337bc5eb5007998

RUN go get -v github.com/go-redis/redis && \
    cd ${GOPATH}/src/github.com/go-redis/redis && \
    git checkout -b v6.14.1 tags/v6.14.1

RUN go get -v github.com/google/uuid && \
    cd ${GOPATH}/src/github.com/google/uuid && \
    git checkout -b known_version 9b3b1e0f5f99ae461456d768e7d301a7acdaa2d8

ENV PROTOBUF_GO_PATH ${GOPATH}/src/github.com/golang/protobuf
RUN mkdir -p ${PROTOBUF_GO_PATH} && \
    git clone https://github.com/golang/protobuf ${PROTOBUF_GO_PATH} && \
    cd ${PROTOBUF_GO_PATH} && \
    git checkout -b v1.1.0 tags/v1.1.0

ENV GO_X_NET ${GOPATH}/src/golang.org/x/net
RUN mkdir -p ${GO_X_NET} && \
    git clone https://github.com/golang/net ${GO_X_NET} && \
    cd ${GO_X_NET} && \
    git checkout -b known_version 26e67e76b6c3f6ce91f7c52def5af501b4e0f3a2

ENV GO_X_TEXT ${GOPATH}/src/golang.org/x/text
RUN mkdir -p ${GO_X_TEXT} && \
    git clone https://github.com/golang/text ${GO_X_TEXT} && \
    cd ${GO_X_TEXT} && \
    git checkout -b v0.3.0 tags/v0.3.0

ENV GO_X_SYS ${GOPATH}/src/golang.org/x/sys
RUN mkdir -p ${GO_X_SYS} && \
    git clone https://github.com/golang/sys ${GO_X_SYS} && \
    cd ${GO_X_SYS} && \
    git checkout -b known_version d0be0721c37eeb5299f245a996a483160fc36940

ENV GO_GRPC ${GOPATH}/src/google.golang.org/grpc
RUN mkdir -p ${GO_GRPC} && \
    git clone https://github.com/grpc/grpc-go ${GO_GRPC} && \
    cd ${GO_GRPC} && \
    git checkout -b v1.13.0 tags/v1.13.0

ENV GO_PROTOGEN ${GOPATH}/src/google.golang.org/genproto
RUN mkdir -p ${GO_PROTOGEN} && \
    git clone https://github.com/google/go-genproto ${GO_PROTOGEN} && \
    cd ${GO_PROTOGEN} && \
    git checkout -b known_version 4b56f30a1fd96a133a036b62cdd2a249883dd89b

RUN go get -v github.com/eclipse/paho.mqtt.golang && \
    cd ${GOPATH}/src/github.com/eclipse/paho.mqtt.golang && \
    git checkout -b v1.1.1 tags/v1.1.1

RUN go get -v github.com/influxdata/influxdb && \
    cd ${GOPATH}/src/github.com/influxdata/influxdb && \
    git checkout -b v1.6.0 tags/v1.6.0

RUN go get -v github.com/hashicorp/vault && \
    cd  ${GOPATH}/src/github.com/hashicorp/vault && \
    git checkout -b v1.0.0-beta2 tags/v1.0.0-beta2

# tls, crypto library needs to open62541
RUN apt-get update && \
    apt-get install -y libmbedtls-dev

ADD DataAgent ./DataAgent
ADD ImageStore/go ./ImageStore/go
ADD StreamManager ./StreamManager
ADD Gopkg.toml ./
ADD Gopkg.lock ./
ADD Certificates Certificates/

ADD DataBusAbstraction ./DataBusAbstraction
# building libopen62541W.a for cgo
RUN cd DataBusAbstraction/go/test && \
    make build_lib

ADD Util ./Util

RUN go build -o /root/go/bin/DataAgent DataAgent/DataAgent.go
ENTRYPOINT ["DataAgent", "-log_dir=${GO_WORK_DIR}/log/DataAgent"]
HEALTHCHECK NONE