version: '3'

services:

  #----Start: IEI Base Images----
  # Define ia_gobase service
  ia_gobase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.gobase
      args:
        UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
    image: ia_gobase:${IEI_VERSION}

  #----End: IEI Base Images----

  ia_provision:
    depends_on:
      - ia_gobase
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.provision
      args:
        IEI_VERSION: ${IEI_VERSION}
    image: ia_provision:${IEI_VERSION}
    container_name: ia_provision
    hostname: ia_provision
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
      VAULT_PORT: ${VAULT_PORT}
      TPM_ENABLE: ${TPM_ENABLE}
      REDIS_PORT: ${REDIS_PORT}
      MINIO_PORT: ${MINIO_PORT}
      INFLUXDB_PORT: ${INFLUXDB_PORT}
      OPCUA_PORT: ${OPCUA_PORT}
      LD_LIBRARY_PATH: /usr/local/lib
    volumes:
      - "${CERTIFICATES_PATH}:/etc/ssl"
      - "${IEI_INSTALL_PATH}/secret_store:/vault/file"
      - "${IEI_INSTALL_PATH}/tpm_secret:/IEI/tpm_secret"
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: ${HEALTHCHECK_DURATION}


  #----End: IEI Containers ----
