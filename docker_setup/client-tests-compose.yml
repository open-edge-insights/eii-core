version: '3'

services:

# Define ia_pybase_alpine service
  ia_pybase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.pybase
      args:
        PYTHON_VERSION: ${PYTHON_VERSION}
        HOST_TIME_ZONE: ${HOST_TIME_ZONE}
        ALPINE_VERSION: ${ALPINE_VERSION}
    image: ia_pybase:${IEI_VERSION}

  # Define Test Container service
  ia_client_tests:
    depends_on:
      - ia_pybase
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.ct
      args:
        IEI_VERSION: ${IEI_VERSION}
        REDIS_VERSION: ${REDIS_VERSION}
        MINIO_VERSION: ${MINIO_VERSION}
    image: ia/client_tests:${IEI_VERSION}
    container_name: ia_client_tests
    hostname: ia_client_tests
    network_mode: host
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      INFLUX_SERVER: ${INFLUX_SERVER}
      NO_PROXY: ${NO_PROXY},${RTSP_CAMERA_IP}
      no_proxy: ${NO_PROXY},${RTSP_CAMERA_IP}
    volumes:
      - "$PWD/../cert-tool/Certificates/imagestore:/etc/ssl/imagestore"
      - "$PWD/../cert-tool/Certificates/grpc_internal:/etc/ssl/grpc_internal"
      - "$PWD/../cert-tool/Certificates/grpc_external:/etc/ssl/grpc_external"
      - "$PWD/../cert-tool/Certificates/ca:/etc/ssl/ca"
    command: ["--config", "${CONFIG_FILE}", "--log", "${LOG_LEVEL}"]
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
    healthcheck:
      test: ["CMD-SHELL", "exit", "0"]
      interval: ${HEALTHCHECK_DURATION}
