version: '3'

services:
  
  #---- Start: ETA Dependency Services----
  # Define an InfluxDB service
  ia_influxdb:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.influxdb
    container_name: ia_influxdb
    hostname: ia_influxdb
    image: ia/influxdb:${INFLUXDB_VERSION}
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    volumes:
      - /var/lib/eta/config/influxdb.conf:/etc/influxdb/influxdb.conf
    ports:
      - "${INFLUXDB_PORT}:${INFLUXDB_PORT}"
      
  # Define an Redis service
  ia_redis:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.redis
    container_name: ia_redis
    hostname: ia_redis
    image: ia/redis:${REDIS_VERSION}
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  #---- End: ETA Dependency Services----
  
  #----Start: ETA Base Images----
  # Define ia-gobase service
  ia-gobase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.gobase
    image: ia/gobase:1.0

  # Define ia-pybase service
  ia-pybase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.pybase
    image: ia/pybase:1.0

  # Define ia-gopybase service
  ia-gopybase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.gopybase
    image: ia/gopybase:1.0
  
  #----End: ETA Base Images----
  
  #----Start: ETA Containers ----
  # Define DataAgent service
  ia_data_agent:
    depends_on:
      - ia-gobase
      - ia_influxdb
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.da
    image: ia/data_agent:1.0
    container_name: ia_data_agent
    hostname: ia_data_agent
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    volumes:
      - /var/lib/eta/config/DataAgent.conf:/root/go/src/ElephantTrunkArch/DataAgent/DataAgent.conf
      - /var/lib/eta/logs/DataAgent:/ETA/log/DataAgent
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
      - "${OPCUA_PORT}:${OPCUA_PORT}"
        
  # Define DataAnalytics service
  ia_data_analytics:
    depends_on:
      - ia_influxdb
      - ia_redis
      - ia_data_agent
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.classifier
    image: ia/data_analytics:1.0
    container_name: ia_data_analytics
    hostname: ia_data_analytics
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      KAPACITOR_HOSTNAME: ia_data_analytics
      KAPACITOR_URL: http://ia_data_analytics:9092/
      KAPACITOR_INFLUXDB_0_URLS_0: http://ia_influxdb:8086/
      GRPC_SERVER: ${GRPC_SERVER_HOST}
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    volumes:
      - /var/lib/eta/config/kapacitor.conf:/etc/kapacitor/kapacitor.conf
      - /var/lib/eta/config/factory.json:/ETA/factory.json
      - /var/lib/eta/config/factory_prod.json:/ETA/factory_prod.json
      - /var/lib/eta/config/ref:/ETA/agent/ref
      - /var/lib/eta/config/ref_prod:/ETA/agent/ref_prod
      - /var/lib/eta/logs/classifier_logs:/ETA/classifier_logs
    expose:
      - "9092"
    command: ${CONFIG_FILE}
    
  # Define VideoIngestion service
  ia_video_ingestion:
    depends_on:
      - ia_influxdb
      - ia_redis
      - ia_data_analytics
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.vi
    image: ia/video_ingestion:1.0
    container_name: ia_video_ingestion
    hostname: ia_video_ingestion
    network_mode: host
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY},${HOSTNAME}
      no_proxy: ${NO_PROXY},${HOSTNAME}
    volumes:
      - /var/lib/eta/test_videos:/ETA/test_videos
      - /var/lib/eta/config/factory.json:/ETA/factory.json
      - /var/lib/eta/config/factory_prod.json:/ETA/factory_prod.json
      - /var/lib/eta/config/ref:/ETA/agent/ref
      - /var/lib/eta/config/ref_prod:/ETA/agent/ref_prod
      - /var/lib/eta/logs/video_ingestion_logs:/ETA/video_ingestion_logs
    command: ${CONFIG_FILE}
   
  #----End: ETA Containers ----
