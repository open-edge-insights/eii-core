version: '3'

services:
  
  # Define a log_rotate service
  ia_log_rotate:
    container_name: ia_log_rotate
    hostname: ia_log_rotate
    image: blacklabelops/logrotate:1.2
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      LOGS_DIRECTORIES: ${ETA_INSTALL_PATH}/logs
      # Logrotate can rotate logfile according to the following intervals:
      # hourly
      # daily
      # weekly
      # monthly
      # yearly
      # For more details, refer the following link
      # https://hub.docker.com/r/blacklabelops/logrotate/
      LOGROTATE_INTERVAL: "daily"
      LOGROTATE_COPIES: ${LOGROTATE_COPIES}
      LOGROTATE_DATEFORMAT: "%Y%m%d_%H:%M:%S"
      TZ: ${HOST_TIME_ZONE}
    volumes:  
      - "${ETA_INSTALL_PATH}/logs:${ETA_INSTALL_PATH}/logs"

  #---- Start: ETA Dependency Services----
  # Define an InfluxDB service
  ia_influxdb:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.influxdb
    container_name: ia_influxdb
    hostname: ia_influxdb
    image: ia/influxdb:${INFLUXDB_VERSION}
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    volumes:
      - "${ETA_INSTALL_PATH}/config/influxdb.conf:/etc/influxdb/influxdb.conf"
    ports:
      - "${INFLUXDB_PORT}:${INFLUXDB_PORT}"
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
      
  # Define an Redis service
  ia_redis:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.redis
    container_name: ia_redis
    hostname: ia_redis
    image: ia/redis:${REDIS_VERSION}
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
    
  #---- End: ETA Dependency Services----
  
  #----Start: ETA Base Images----
  # Define ia-gobase service
  ia-gobase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.gobase
    image: ia/gobase:${ETA_CONT_VERSION}
    depends_on:
      - ia_log_rotate
    
  # Define ia-pybase service
  ia-pybase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.pybase
    image: ia/pybase:${ETA_CONT_VERSION}
    depends_on:
      - ia_log_rotate
  
  # Define ia-gopybase service
  ia-gopybase:
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.gopybase
    image: ia/gopybase:${ETA_CONT_VERSION}
    depends_on:
      - ia_log_rotate

  #----End: ETA Base Images----
  
  #----Start: ETA Containers ----
  # Define DataAgent service
  ia_data_agent:
    depends_on:
      - ia-gobase
      - ia_influxdb
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.da
    image: ia/data_agent:${ETA_CONT_VERSION}
    container_name: ia_data_agent
    hostname: ia_data_agent
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    volumes:
      - "${ETA_INSTALL_PATH}/config/DataAgent.conf:/root/go/src/ElephantTrunkArch/DataAgent/DataAgent.conf"
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
      - "${OPCUA_PORT}:${OPCUA_PORT}"
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
        
  # Define DataAnalytics service
  ia_data_analytics:
    depends_on:
      - ia_influxdb
      - ia_redis
      - ia_data_agent
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.classifier
    image: ia/data_analytics:${ETA_CONT_VERSION}
    container_name: ia_data_analytics
    hostname: ia_data_analytics
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      KAPACITOR_HOSTNAME: ia_data_analytics
      KAPACITOR_URL: http://ia_data_analytics:9092/
      KAPACITOR_INFLUXDB_0_URLS_0: http://ia_influxdb:8086/
      GRPC_SERVER: ${GRPC_SERVER_HOST}
      NO_PROXY: ${NO_PROXY}
      no_proxy: ${NO_PROXY}
    volumes:
      - "${ETA_INSTALL_PATH}/config/kapacitor.conf:/etc/kapacitor/kapacitor.conf"
      - "${ETA_INSTALL_PATH}/config/factory.json:/ETA/factory.json"
      - "${ETA_INSTALL_PATH}/config/factory_prod.json:/ETA/factory_prod.json"
      - "${ETA_INSTALL_PATH}/config/ref:/ETA/agent/ref"
      - "${ETA_INSTALL_PATH}/config/ref_prod:/ETA/agent/ref_prod"
      - "${ETA_INSTALL_PATH}/logs/classifier_logs:/ETA/classifier_logs"
    expose:
      - "9092"
    command: ["--config", "${CONFIG_FILE}", "--log", "${LOG_LEVEL}"]
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
       
  # Define VideoIngestion service
  ia_video_ingestion:
    depends_on:
      - ia_influxdb
      - ia_redis
      - ia_data_analytics
    build:
      context: ../
      dockerfile: $PWD/dockerfiles/Dockerfile.vi
    image: ia/video_ingestion:${ETA_CONT_VERSION}
    container_name: ia_video_ingestion
    hostname: ia_video_ingestion
    network_mode: host
    restart: on-failure:${FAILURE_ATTEMPTS}
    environment:
      NO_PROXY: ${NO_PROXY},${HOST_IP}
      no_proxy: ${NO_PROXY},${HOST_IP}
    volumes:
      - "${ETA_INSTALL_PATH}/test_videos:/ETA/test_videos"
      - "${ETA_INSTALL_PATH}/config/factory.json:/ETA/factory.json"
      - "${ETA_INSTALL_PATH}/config/factory_prod.json:/ETA/factory_prod.json"
      - "${ETA_INSTALL_PATH}/config/ref:/ETA/agent/ref"
      - "${ETA_INSTALL_PATH}/config/ref_prod:/ETA/agent/ref_prod"
      - "${ETA_INSTALL_PATH}/logs/video_ingestion_logs:/ETA/video_ingestion_logs"
    command: ["--config", "${CONFIG_FILE}", "--log", "${LOG_LEVEL}"]
    logging:
      driver: ${LOGGING_DRIVER}
      options:
        max-size: ${LOGROTATE_SIZE_FOR_CONT}
        max-file: ${LOGROTATE_COPIES}
    
  #----End: ETA Containers ----
